<?php namespace HashOver;header('Content-Type: application/xml; charset=utf-8');chdir(realpath('../'));require('backend/nocache-headers.php');require('backend/standard-setup.php');setup_autoloader(function($error){echo '<?xml version="1.0" encoding="UTF-8"?>',PHP_EOL;echo '<error>',$error,'</error>';});function parse_comments(&$metadata,&$comment,&$rss,&$xml,&$hashover){if(isset($comment['notice'])){return;}$comment['body']=htmlentities($comment['body'],ENT_COMPAT,'UTF-8',true);$comment['body']=html_entity_decode($comment['body'],ENT_COMPAT,'UTF-8');$comment['body']=preg_replace('/\[(img|\/img)\]/iS','',$comment['body']);$comment['body']=$hashover->markdown->parseMarkdown($comment['body']);$comment['body']=preg_replace('/(<|<\/)code>/iS','\\1pre>',$comment['body']);$name=Misc::getArrayItem($comment,'name')?:$hashover->setup->defaultName;$item=$xml->createElement('item');$title=$name.' : ';$single_comment=str_replace(PHP_EOL,' ',strip_tags($comment['body']));if(mb_strlen($single_comment)>40){$title.=mb_substr($single_comment,0,40).'...';}else{$title.=$single_comment;}$item_title=$xml->createElement('title');$item_title_value=$xml->createTextNode(html_entity_decode($title,ENT_COMPAT,'UTF-8'));$item_title->appendChild($item_title_value);$item->appendChild($item_title);$item_name=$xml->createElement('name');$item_name_value=$xml->createTextNode(html_entity_decode($name,ENT_COMPAT,'UTF-8'));$item_name->appendChild($item_name_value);$item->appendChild($item_name);$url_regex='/((http|https|ftp):\/\/[a-z0-9-@:%_\+.~#?&\/=]+) {0,}/iS';$comment['body']=preg_replace($url_regex,'<a href="\\1" target="_blank">\\1</a>',$comment['body']);$comment['body']=str_replace(PHP_EOL,'<br>',$comment['body']);$item_description=$xml->createElement('description');$item_description_value=$xml->createTextNode($comment['body']);$item_description->appendChild($item_description_value);$item->appendChild($item_description);$item_avatar=$xml->createElement('avatar');$item_avatar_value=$xml->createTextNode($comment['avatar']);$item_avatar->appendChild($item_avatar_value);$item->appendChild($item_avatar);if(!empty($comment['likes'])){$item_likes=$xml->createElement('likes');$item_likes_value=$xml->createTextNode($comment['likes']);$item_likes->appendChild($item_likes_value);$item->appendChild($item_likes);}if($hashover->setup->allowsDislikes===true){if(!empty($comment['dislikes'])){$item_dislikes=$xml->createElement('dislikes');$item_dislikes_value=$xml->createTextNode($comment['dislikes']);$item_dislikes->appendChild($item_dislikes_value);$item->appendChild($item_dislikes);}}$item_pubDate=$xml->createElement('pubDate');$item_pubDate_value=date(DATE_RSS,$comment['timestamp']);$item_pubDate_node=$xml->createTextNode($item_pubDate_value);$item_pubDate->appendChild($item_pubDate_node);$item->appendChild($item_pubDate);$item_permalink_url=$metadata['url'].'#'.$comment['permalink'];$item_guid=$xml->createElement('guid');$item_guid_value=$xml->createTextNode($item_permalink_url);$item_guid->appendChild($item_guid_value);$item->appendChild($item_guid);$item_link=$xml->createElement('link');$item_link_value=$xml->createTextNode($item_permalink_url);$item_link->appendChild($item_link_value);$item->appendChild($item_link);$rss->appendChild($item);if(!empty($comment['replies'])){foreach($comment['replies']as $reply){parse_comments($metadata,$reply,$rss,$xml,$hashover);}}}function create_rss(&$hashover){$thread=$hashover->setup->threadName;$metadata=$hashover->thread->data->readMeta('page-info',$thread);if($metadata!==false){if(!isset($metadata['url'])){$metadata['url']='';}if(!isset($metadata['title'])){$metadata['title']=$hashover->locale->text['untitled'];}}else{$metadata=array('url'=>'','title'=>$hashover->locale->text['untitled']);}$xml=new \DOMDocument('1.0','UTF-8');$xml->preserveWhiteSpace=false;$xml->formatOutput=true;$rss=$xml->createElement('rss');$rss->setAttribute('version','2.0');$rss->setAttribute('xmlns:dc','http://purl.org/dc/elements/1.1/');$rss->setAttribute('xmlns:content','http://purl.org/rss/1.0/modules/content/');$rss->setAttribute('xmlns:atom','http://www.w3.org/2005/Atom');$channel=$xml->createElement('channel');$title=$xml->createElement('title');$title_value=$xml->createTextNode(html_entity_decode($metadata['title'],ENT_COMPAT,'UTF-8'));$title->appendChild($title_value);$channel->appendChild($title);$link=$xml->createElement('link');$link_value=$xml->createTextNode(html_entity_decode($metadata['url'],ENT_COMPAT,'UTF-8'));$link->appendChild($link_value);$channel->appendChild($link);if($hashover->thread->totalCount!==1){$showing_comments_locale=$hashover->locale->text['showing-comments'];}else{$showing_comments_locale=$hashover->locale->text['showing-comment'];}$description=$xml->createElement('description');$count_locale=sprintf($showing_comments_locale,$hashover->thread->totalCount-1);$description_value=$xml->createTextNode($count_locale);$description->appendChild($description_value);$channel->appendChild($description);$atom_link=$xml->createElement('atom:link');$atom_url=$hashover->setup->domain.$_SERVER['PHP_SELF'].'?url='.urlencode($metadata['url']);$atom_link->setAttribute('href','http://'.$atom_url);$atom_link->setAttribute('rel','self');$channel->appendChild($atom_link);$language=$xml->createElement('language');$language_value=$xml->createTextNode('en-us');$language->appendChild($language_value);$channel->appendChild($language);$ttl=$xml->createElement('ttl');$ttl_value=$xml->createTextNode('40');$ttl->appendChild($ttl_value);$channel->appendChild($ttl);$rss->appendChild($channel);foreach($hashover->comments['primary']as $comment){parse_comments($metadata,$comment,$rss,$xml,$hashover);}$xml->appendChild($rss);echo preg_replace_callback('/^(\s+)/m',function($spaces){return str_repeat("\t",mb_strlen($spaces[1])/2);},$xml->saveXML());echo $hashover->statistics->executionEnd('php');}try{$hashover=new \HashOver('rss');$hashover->setup->apiCheck('rss');$hashover->setup->setupRemoteAccess();$hashover->setup->setPageURL('request');$hashover->initiate();$hashover->parsePrimary();$method=$hashover->setup->getRequest('sorting','by-date');$hashover->sortPrimary($method);create_rss($hashover);}catch(\Exception $error){echo Misc::displayException($error,'rss');}